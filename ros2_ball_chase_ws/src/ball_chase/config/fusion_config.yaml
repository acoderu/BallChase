# Configuration for the Kalman filter fusion node

startup:
  wait_for_transform: true
  transform_retry_count: 60  # Increase retry count
  transform_retry_delay: 1.0  # 1 second between retries
  required_transforms: ['base_link', 'lidar_frame']
  
# Process noise: how much uncertainty to add during prediction steps
process_noise:
  position: 0.1        # Position uncertainty per second squared
  velocity: 1.0        # Velocity uncertainty per second

# Measurement noise: how much to trust each sensor type
measurement_noise:
  hsv_2d: 50.0         # Pixels - high because 2D only
  yolo_2d: 30.0        # Pixels - lower because more accurate
  hsv_3d: 0.05         # Meters - from depth camera with HSV
  yolo_3d: 0.04        # Meters - from depth camera with YOLO
  lidar: 0.03          # Meters - most accurate for 3D
  # Distance estimation from 2D
  hsv_2d_est3d: 0.15   # Meters - estimated 3D from HSV 2D
  yolo_2d_est3d: 0.12  # Meters - estimated 3D from YOLO 2D

# Filter tuning parameters
filter:
  max_time_diff: 0.2           # Maximum time difference for fusion (seconds)
  min_confidence_threshold: 0.5 # Minimum confidence threshold for detections
  detection_timeout: 0.5        # Time after which a detection is considered stale
  transform_timeout: 5.0        # Maximum time to wait for transform (seconds)
  transform_retry_delay: 0.5    # Delay between transform retries (seconds)
  startup_wait_time: 2.0        # Time to wait on startup before sensor processing
  ground_tracking_mode: true    # Enable ground tracking constraint
  ball_ground_height: 0.0381    # 1.5 inches in meters

# Tracking reliability thresholds
tracking:
  position_uncertainty_threshold: 0.5  # Position uncertainty threshold for reliable tracking
  velocity_uncertainty_threshold: 1.0  # Velocity uncertainty threshold for reliable tracking
  consecutive_updates_required: 3      # Required number of successful consecutive updates

# Distance-based reliability settings
reliability:
  lidar:
    close_range: 0.5            # Below this distance, LIDAR is very unreliable
    optimal_range_start: 1.0    # LIDAR becomes reliable at this distance
    optimal_range_end: 3.0      # LIDAR reliability decreases beyond this
    close_range_factor: 10.0    # Noise multiplier for close range
    optimal_range_factor: 0.6   # Noise multiplier for optimal range

# Physical measurements
physical_measurements:
  lidar_height: 0.1524      # LIDAR height from ground (6 inches)
  camera_height: 0.1016     # Camera height from ground (4 inches)
  ball_center_height: 0.0381 # Tennis ball center height from ground (1.5 inches)
  ball_radius: 0.03429      # Tennis ball radius in meters (1.35 inches)

# New: Pi 5 resource management settings
resource_management:
  enable_resource_monitoring: true     # Enable monitoring of CPU, memory, temperature
  adaptive_update_rate: true           # Enable adaptive update rate based on system load
  base_update_rate: 20.0               # Base filter update rate (Hz)
  min_update_rate: 5.0                 # Minimum update rate during high system load (Hz)
  cpu_check_interval: 5.0              # Check CPU usage every N seconds
  memory_check_interval: 30.0          # Check memory usage every N seconds
  temperature_check_interval: 10.0     # Check system temperature every N seconds
  high_cpu_threshold: 75               # High CPU usage threshold (%)
  critical_cpu_threshold: 90           # Critical CPU usage threshold (%)
  high_memory_threshold: 80            # High memory usage threshold (%)
  high_temperature_threshold: 75.0     # High temperature threshold (°C)
  critical_temperature_threshold: 82.0 # Critical temperature threshold (°C)
  
# Motion state detection thresholds - now configurable
motion_state_thresholds:
  stationary_max_velocity: 0.03        # Maximum velocity for stationary state (m/s)
  small_movement_max_velocity: 0.25    # Maximum velocity for small movement state (m/s)
  auto_calibrate: true                 # Enable auto-calibration of thresholds
  
# Consensus initialization settings for more robust startup
initialization:
  require_consensus: true              # Require multiple measurements for initialization
  min_measurements: 2                   # Minimum number of measurements required
  max_initialization_time: 5.0         # Maximum time to wait for initialization (seconds)
  position_variance_initial: 10.0      # Initial position variance (meters²)
  velocity_variance_initial: 100.0     # Initial velocity variance (m/s)²

expected_frames:
  lidar: "lidar_frame"
  hsv_2d: "ascamera_color_0"
  yolo_2d: "ascamera_color_0"
  hsv_3d: "ascamera_color_0"
  yolo_3d: "ascamera_color_0"
  depth_camera: "ascamera_camera_link_0"
  reference_frame: "base_link"
